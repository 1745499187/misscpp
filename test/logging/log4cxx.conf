# root logger, 级别为TRACE, 输出为stdout
log4j.rootLogger=TRACE, stdout

# 定义两个logger: common和error， common输出到A1，error输出到A2，因为他们都从rootLogger继承，所以都会被输出到stdout
# 可以通过log4cxx::Logger::getLogger("common")和log4cxx::Logger::getLogger("error")来分别获得这两个logger
log4j.logger.common=TRACE, A1
log4j.logger.error=TRACE, A2

# 定义stdout的输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d] [%-8c] %-5p (%F:%L) - %m%n

# 定义A1
log4j.appender.A1=org.apache.log4j.RollingFileAppender
log4j.appender.A1.File=./log1.log
log4j.appender.A1.MaxFileSize=100KB
log4j.appender.A1.MaxBackupIndex=10
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=[%d] [%-8c] %-5p (%F:%L) - %m%n

# 定义A2
log4j.appender.A2=org.apache.log4j.RollingFileAppender
log4j.appender.A2.File=./log2.log
log4j.appender.A2.MaxFileSize=100KB
log4j.appender.A2.MaxBackupIndex=10
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=[%d] [%-8c] %-5p (%F:%L) - %m%n